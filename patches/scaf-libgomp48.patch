--- a/libgomp/parallel.c
+++ b/libgomp/parallel.c
@@ -26,7 +26,7 @@
 
 #include "libgomp.h"
 #include <limits.h>
-
+#include <scaf.h>
 
 /* Determine the number of threads to be launched for a PARALLEL construct.
    This algorithm is explicitly described in OpenMP 3.0 section 2.4.1.
@@ -104,7 +104,17 @@ gomp_resolve_num_threads (unsigned specified, unsigned count)
 void
 GOMP_parallel_start (void (*fn) (void *), void *data, unsigned num_threads)
 {
-  num_threads = gomp_resolve_num_threads (num_threads, 0);
+  //num_threads = gomp_resolve_num_threads (num_threads, 0);
+  num_threads = scaf_section_start((void*)(fn));
+
+  // Have SCAF fire off a ``training'' fork in order to gather timing
+  // information. SCAF then intercepts all system calls of the new process to
+  // prevent it from incorrectly affecting system state. Furthermore, the
+  // experiment will only be allowed to run for a specified maximum amount of
+  // time before it is concluded, so as not to affect overall program progress
+  // too dramatically.
+  scaf_gomp_training_create(fn, data);
+
   gomp_team_start (fn, data, num_threads, gomp_new_team (num_threads));
 }
 
@@ -131,6 +141,8 @@ GOMP_parallel_end (void)
     }
   else
     gomp_team_end ();
+  scaf_section_end();
+  scaf_gomp_training_destroy();
 }

